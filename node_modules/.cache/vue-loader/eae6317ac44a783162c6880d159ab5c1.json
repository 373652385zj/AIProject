{"remainingRequest":"/Volumes/JAKY/温博老师给的任务/智能盒子(1)/node_modules/_vue-loader@15.9.3@vue-loader/lib/index.js??vue-loader-options!/Volumes/JAKY/温博老师给的任务/智能盒子(1)/src/components/System/BaseSetting.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Volumes/JAKY/温博老师给的任务/智能盒子(1)/src/components/System/BaseSetting.vue","mtime":1599822245000},{"path":"/Volumes/JAKY/温博老师给的任务/智能盒子(1)/node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/JAKY/温博老师给的任务/智能盒子(1)/node_modules/_vue-loader@15.9.3@vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Volumes/JAKY/温博老师给的任务/智能盒子(1)/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":499162500000},{"path":"/Volumes/JAKY/温博老师给的任务/智能盒子(1)/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/JAKY/温博老师给的任务/智能盒子(1)/node_modules/_vue-loader@15.9.3@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouaW5wdXQtaXAgdWwgbGkgaW5wdXQgewogICAgY29sb3I6ICMwMDAwMDA7CiAgICB3aWR0aDogODAlICFpbXBvcnRhbnQ7CiAgICBmb250LXNpemU6IDE2cHg7Cn0KCi5pbnB1dC1zdWJuZXQgdWwgbGkgaW5wdXQgewogICAgY29sb3I6ICMwMDAwMDA7CiAgICB3aWR0aDogODAlICFpbXBvcnRhbnQ7CiAgICBmb250LXNpemU6IDE2cHg7Cn0K"},{"version":3,"sources":["BaseSetting.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkMA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"BaseSetting.vue","sourceRoot":"src/components/System","sourcesContent":["<template>\r\n    <div class=\"test3\">\r\n        <div class=\"title2\">\r\n            <h3>基础网络</h3>\r\n        </div>\r\n        <div class=\"aline\"></div>\r\n        <div class=\"cont1\">\r\n\r\n            <!----------------------------------------页面内部--------------------------------------------->\r\n            <div class=\"word\">\r\n                <!--                    <hr class=\"hrLine\"/>-->\r\n                <Divider orientation=\"left\" style=\"font-weight: bold\">▷ LAN1</Divider>\r\n            </div>\r\n\r\n            <div class=\"father\">\r\n                <label>IP地址</label>\r\n                <ve-ip width=\"220\" @status=\"isIP\" format=\"ipv4\" v-model=\"ip\"></ve-ip>\r\n                <br>\r\n                <br>\r\n\r\n                <label>子网掩码</label>\r\n                <ve-subnet width=\"220\" @status=\"isNetmask\" v-model=\"netmask\"></ve-subnet>\r\n                <br>\r\n                <br>\r\n\r\n                <label>网关</label>\r\n                <ve-ip width=\"220\" format=\"ipv4\" @status=\"isGateway\" :message=\"'请输入正确的网关'\" v-model=\"gateway\"></ve-ip>\r\n                <br>\r\n                <br>\r\n\r\n\r\n                <Button type=\"primary\" style=\"margin-left: 500px;\" @click=\"checkTheIP()\">保存配置</Button>\r\n\r\n            </div>\r\n\r\n            <div class=\"word\">\r\n                <Divider orientation=\"left\" style=\"font-weight: bold\">▷ 其他</Divider>\r\n            </div>\r\n            <div class=\"father\">\r\n                <label>首选DNS</label>\r\n                <ve-ip width=\"200\" format=\"ipv4\" :message=\"'请输入正确的DNS地址'\" v-model=\"DNS\"></ve-ip>\r\n                <br>\r\n                <br>\r\n\r\n                <label>备选DNS</label>\r\n                <ve-ip width=\"200\" format=\"ipv4\" :message=\"'请输入正确的DNS地址'\" v-model=\"DNS2\"></ve-ip>\r\n                <br>\r\n                <br>\r\n\r\n                <label>HTTPS</label>\r\n                <Input v-model=\"HTTPS\" placeholder=\"Enter something...\" style=\"margin-right: 50px;width: 250px\"/>\r\n                <br>\r\n                <br>\r\n\r\n                <Button type=\"primary\" style=\"margin-left: 500px;\">保存配置</Button>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    import http from \"@/config/http\";\r\n\r\n    export default {\r\n        name: \"BaseSetting\",\r\n        data() {\r\n            return {\r\n                ip: [],\r\n                netmask: [],\r\n                gateway: [],\r\n                DNS: [],\r\n                DNS2: [],\r\n                HTTPS: '',\r\n                isIpTrue: true,\r\n                isGatewayTrue: true,\r\n                isNetmaskTrue: true\r\n            }\r\n        },\r\n        methods: {\r\n            save(event) {\r\n                console.log(event.target.value)\r\n            },\r\n            handleError(value) {\r\n                this.$Message.error(value)\r\n            },\r\n            getIP() {\r\n                let url = this.getIPUrl;\r\n                this.$curl.post(url).then(res => {\r\n                    if (res.code === 200) {\r\n                        this.netmask = [];\r\n                        this.gateway = [];\r\n                        this.ip = [];\r\n                        res.data.NETMASK.split('.').forEach(item => {\r\n                            this.netmask.push(+item)\r\n                        });\r\n                        if (res.data.GATEWAY) {\r\n                            res.data.GATEWAY.split('.').forEach(item => {\r\n                                this.gateway.push(+item)\r\n                            });\r\n                        }\r\n                        res.data.IP.split('.').forEach(item => {\r\n                            this.ip.push(+item)\r\n                        });\r\n                    } else {\r\n                        this.$Message.warning(res.msg)\r\n                    }\r\n                }, err => {\r\n                    this.$Message.error(err)\r\n                })\r\n            },\r\n            isIP(status) {\r\n                this.isIpTrue = !status;\r\n            },\r\n            isGateway(status) {\r\n                this.isGatewayTrue = !status;\r\n            },\r\n            isNetmask(status) {\r\n                this.isNetmaskTrue = status;\r\n            },\r\n            checkTheIP() {\r\n                if (this.isGatewayTrue && this.isNetmaskTrue && this.isIpTrue) {\r\n                    let flag = true;\r\n                    for (let i = 0; i < 3; i++) {\r\n                        if (this.ip[i] != this.gateway[i]) {\r\n                            flag = false;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (flag) {\r\n                        this.sumbitGeditIP(this.ip, this.gateway, this.netmask);\r\n                    } else {\r\n                        this.$Modal.warning({\r\n                            title: \"警告\",\r\n                            content: \"ip与子网掩码不在同一网段，这可能将导致开发板系统无法上网，是否继续\",\r\n                            okText: \"是\",\r\n                            cancelText: \"否\",\r\n                            onOk: this.sumbitGeditIP(this.ip, this.gateway, this.netmask)\r\n                        })\r\n                    }\r\n                } else {\r\n                    this.$Message.error(\"保存配置失败，请检查IP，网关，子网掩码是否正确\")\r\n                }\r\n            },\r\n            sumbitGeditIP(ip, gateway, netmask) {\r\n                let url = this.geditIPUrl;\r\n                let data = {\r\n                    ip: ip[0].toString() + '.' + ip[1].toString() + '.' + ip[2].toString() + '.' + ip[3].toString(),\r\n                    gateway: gateway[0].toString() + '.' + gateway[1].toString() + '.' + gateway[2].toString() + '.' + gateway[3].toString(),\r\n                    netmask: netmask[0].toString() + '.' + netmask[1].toString() + '.' + netmask[2].toString() + '.' + netmask[3].toString()\r\n                };\r\n                this.$curl.post(url, data).then(res => {\r\n                    if (res.code === 200) {\r\n                        this.getIP();\r\n                        this.$Message.success(res.msg);\r\n                    } else {\r\n                        this.$Message.warning(res.msg);\r\n                    }\r\n                }, err => {\r\n                    this.$Message.error(err);\r\n                })\r\n            }\r\n        },\r\n        created() {\r\n            let url = this.getIPUrl;\r\n            this.$curl.post(url).then(res => {\r\n                if (res.code == 200) {\r\n                    this.netmask = [];\r\n                    this.gateway = [];\r\n                    this.ip = [];\r\n                    res.data.NETMASK.split('.').forEach(item => {\r\n                        this.netmask.push(+item)\r\n                    });\r\n                    if (res.data.GATEWAY) {\r\n                        res.data.GATEWAY.split('.').forEach(item => {\r\n                            this.gateway.push(+item)\r\n                        });\r\n                    }\r\n                    res.data.IP.split('.').forEach(item => {\r\n                        this.ip.push(+item)\r\n                    });\r\n                } else {\r\n                    this.$Message.warning(res.msg)\r\n                }\r\n            }, err => {\r\n                this.$Message.error(err)\r\n            })\r\n        },\r\n        mixins: [http]\r\n    }\r\n</script>\r\n\r\n<style>\r\n    .input-ip ul li input {\r\n        color: #000000;\r\n        width: 80% !important;\r\n        font-size: 16px;\r\n    }\r\n\r\n    .input-subnet ul li input {\r\n        color: #000000;\r\n        width: 80% !important;\r\n        font-size: 16px;\r\n    }\r\n</style>\r\n"]}]}
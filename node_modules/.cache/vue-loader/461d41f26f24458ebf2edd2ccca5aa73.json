{"remainingRequest":"/Volumes/JAKY/温博老师给的任务/智能盒子(1)/node_modules/_vue-loader@15.9.3@vue-loader/lib/index.js??vue-loader-options!/Volumes/JAKY/温博老师给的任务/智能盒子(1)/src/components/System/user_management.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Volumes/JAKY/温博老师给的任务/智能盒子(1)/src/components/System/user_management.vue","mtime":1600254527000},{"path":"/Volumes/JAKY/温博老师给的任务/智能盒子(1)/node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/JAKY/温博老师给的任务/智能盒子(1)/node_modules/_vue-loader@15.9.3@vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Volumes/JAKY/温博老师给的任务/智能盒子(1)/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":499162500000},{"path":"/Volumes/JAKY/温博老师给的任务/智能盒子(1)/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/JAKY/温博老师给的任务/智能盒子(1)/node_modules/_vue-loader@15.9.3@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKClt2LWNsb2FrXSB7CiAgICBkaXNwbGF5OiBub25lOwp9Cg=="},{"version":3,"sources":["user_management.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8XA;AACA;AACA","file":"user_management.vue","sourceRoot":"src/components/System","sourcesContent":["<template>\r\n    <div class=\"test3\">\r\n        <div class=\"title2\">\r\n            <h3>用户管理</h3>\r\n        </div>\r\n        <div class=\"aline\"></div>\r\n        <div class=\"cont1\">\r\n            <div class=\"word\">\r\n                <Divider orientation=\"left\" style=\"font-weight: bold\">▷ 用户管理</Divider>\r\n\r\n                <br>\r\n                <br>\r\n                <Table :loading=\"loading\"  border :columns=\"columns12\" :data=\"userDataArray\"\r\n                       style=\"width: 400px;margin-left: 20px;\" v-cloak>\r\n                    <template slot-scope=\"{ row }\" slot=\"username\">\r\n                        <strong>{{ row.username }}</strong>\r\n                    </template>\r\n                    <template slot-scope=\"{ row, index }\" slot=\"action\">\r\n                        <Button type=\"primary\" size=\"small\" style=\"margin-right: 5px\" @click=\"showEditUser(index)\">修改\r\n                        </Button>\r\n                        <Button type=\"error\" size=\"small\" @click=\"remove(index)\">删除</Button>\r\n                    </template>\r\n                </Table>\r\n            </div>\r\n            <br>\r\n            <Button type=\"primary\" style=\"margin-left: 415px;\" @click=\"showAddModal()\">添加管理员</Button>\r\n            <Modal @on-cancel=\"handleClear\" :closable=\"false\" title=\"新增管理员\" v-model=\"showAdd\" width=\"400\">\r\n                <Form ref=\"formCustom\" :model=\"formCustom\" :rules=\"ruleCustom\" :label-width=\"80\"\r\n                      style=\"padding-right: 30px\">\r\n                    <FormItem label=\"账号\" prop=\"addUsername\">\r\n                        <Input type=\"text\" v-model=\"formCustom.addUsername\"></Input>\r\n                    </FormItem>\r\n                    <FormItem label=\"密码\" prop=\"passwd\">\r\n                        <Input type=\"password\" v-model=\"formCustom.passwd\"></Input>\r\n                    </FormItem>\r\n                    <FormItem label=\"确认密码\" prop=\"passwdCheck\">\r\n                        <Input type=\"password\" v-model=\"formCustom.passwdCheck\"></Input>\r\n                    </FormItem>\r\n                </Form>\r\n                <div slot=\"footer\">\r\n                    <Button type=\"primary\" @click=\"handleSubmit('formCustom')\">保存</Button>\r\n                    <Button @click=\"handleClear\" style=\"margin-left: 8px\">取消</Button>\r\n                </div>\r\n            </Modal>\r\n            <Modal @on-cancel=\"handleClear\" :closable=\"false\" title=\"修改账号信息\" v-model=\"showEdit\" width=\"400\">\r\n                <Form ref=\"editFormCustom\" :model=\"editFormCustom\" :rules=\"ruleCustom\" :label-width=\"80\"\r\n                      style=\"padding-right: 30px\">\r\n                    <FormItem label=\"账号\" prop=\"editUsername\">\r\n                        <Input type=\"text\" v-model=\"editFormCustom.editUsername\"></Input>\r\n                    </FormItem>\r\n                    <FormItem label=\"旧密码\" prop=\"oldPasswd\">\r\n                        <Input type=\"password\" v-model=\"editFormCustom.oldPasswd\"></Input>\r\n                    </FormItem>\r\n                    <FormItem label=\"新密码\" prop=\"newPasswd\">\r\n                        <Input type=\"password\" v-model=\"editFormCustom.newPasswd\"></Input>\r\n                    </FormItem>\r\n                    <FormItem label=\"确认新密码\" prop=\"newPasswdCheck\">\r\n                        <Input type=\"password\" v-model=\"editFormCustom.newPasswdCheck\"></Input>\r\n                    </FormItem>\r\n                </Form>\r\n                <div slot=\"footer\">\r\n                    <Button type=\"primary\" @click=\"handleEdit('editFormCustom')\">修改</Button>\r\n                    <Button @click=\"handleClear\" style=\"margin-left: 8px\">取消</Button>\r\n                </div>\r\n            </Modal>\r\n            <div class=\"word\">\r\n                <Divider orientation=\"left\" style=\"font-weight: bold\">▷ 登陆超时</Divider>\r\n            </div>\r\n            <div class=\"father\">\r\n                <label>超过时间(分钟)</label>\r\n                    <Input prop=\"timeoutCheck\" type=\"number\" v-model=\"timeout\" placeholder=\"请输入分钟\" style=\"margin-right: 50px;width: 250px\"/>\r\n                <br>\r\n                <br>\r\n\r\n                <Button type=\"primary\" style=\"margin-left: 390px;\" @click=\"sumbitLoginTimeout()\">保存</Button>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import http from \"@/config/http\";\r\n\r\n    export default {\r\n        data() {\r\n            const validateOldPass = (rule, value, callback) => {\r\n                if (value === '') {\r\n                    callback(new Error('请输入旧密码'));\r\n                } else {\r\n                    callback();\r\n                }\r\n            };\r\n            const validateNewPass = (rule, value, callback) => {\r\n                if (value === '') {\r\n                    callback(new Error('请输入新密码'))\r\n                } else {\r\n                    if (this.editFormCustom.newPasswdCheck !== '') {\r\n                        this.$refs.editFormCustom.validateField('newPasswdCheck');\r\n                    }\r\n                    callback();\r\n                }\r\n            };\r\n            const validatePass = (rule, value, callback) => {\r\n                if (value === '') {\r\n                    callback(new Error('请输入密码'));\r\n                } else {\r\n                    if (this.formCustom.passwdCheck !== '') {\r\n                        // 对第二个密码框单独验证\r\n                        this.$refs.formCustom.validateField('passwdCheck');\r\n                    }\r\n                    callback();\r\n                }\r\n            };\r\n            const validatePassCheck = (rule, value, callback) => {\r\n                if (value === '') {\r\n                    callback(new Error('请再次输入密码'));\r\n                } else if (value !== this.formCustom.passwd) {\r\n                    callback(new Error('两次密码不一致!'));\r\n                } else {\r\n                    callback();\r\n                }\r\n            };\r\n            const validateNewPassCheck = (rule, value, callback) => {\r\n                if (value === '') {\r\n                    callback(new Error('请再次输入新密码'));\r\n                } else if (value !== this.editFormCustom.newPasswd) {\r\n                    callback(new Error('两次密码不一致!'));\r\n                } else {\r\n                    callback();\r\n                }\r\n            };\r\n            const validateUsername = (rule, value, callback) => {\r\n                if (value === '') {\r\n                    return callback(new Error('账号不能为空'));\r\n                } else {\r\n                    callback();\r\n                }\r\n            };\r\n            return {\r\n                value11: '',\r\n                columns12: [\r\n                    {\r\n                        title: '用户名',\r\n                        slot: 'username',\r\n                        width: 100\r\n                    },\r\n                    {\r\n                        title: '类型',\r\n                        key: 'type',\r\n                        width: 150\r\n                    },\r\n                    {\r\n                        title: '操作',\r\n                        slot: 'action',\r\n                        align: 'center'\r\n                    }\r\n                ],\r\n                userDataArray: [],\r\n                formCustom: {\r\n                    oldPasswd: '',\r\n                    newPasswd: '',\r\n                    passwd: '',\r\n                    passwdCheck: '',\r\n                    newPasswdCheck: '',\r\n                    addUsername: ''\r\n                },\r\n                oldIndex: 0,\r\n                editFormCustom: {\r\n                    editUsername: '',\r\n                    oldPasswd: '',\r\n                    newPasswd: '',\r\n                    newPasswdCheck: ''\r\n                },\r\n                ruleCustom: {\r\n                    oldPasswd: [\r\n                        {validator: validateOldPass, trigger: 'blur'}\r\n                    ],\r\n                    newPasswd: [\r\n                        {validator: validateNewPass, trigger: 'blur'}\r\n                    ],\r\n                    passwd: [\r\n                        {validator: validatePass, trigger: 'blur'}\r\n                    ],\r\n                    newPasswdCheck: [\r\n                        {validator: validateNewPassCheck, trigger: 'blur'}\r\n                    ],\r\n                    passwdCheck: [\r\n                        {validator: validatePassCheck, trigger: 'blur'}\r\n                    ],\r\n                    addUsername: [\r\n                        {validator: validateUsername, trigger: 'blur'}\r\n                    ],\r\n                    editUsername: [\r\n                        {validator: validateUsername, trigger: 'blur'}\r\n                    ]\r\n                },\r\n                showAdd: false,\r\n                showEdit: false,\r\n                timeout: 5,\r\n                loading: true\r\n            }\r\n        },\r\n        methods: {\r\n            getAllUserArray(){\r\n                let url = this.selectAllUserUrl;\r\n                let data = {};\r\n                this.$curl.post(url, data).then(res => {\r\n                    if (res.code == 200) {\r\n                        this.userDataArray = res.data;\r\n                        for (let i = 0; i < this.userDataArray.length; i++) {\r\n                            this.userDataArray[i].type = this.userDataArray[i].type==0?\"超级管理员\":\"管理员\";\r\n                        }\r\n                    } else {\r\n                        this.$Message.warning(res.msg);\r\n                    }\r\n                }, err => {\r\n                    this.$Message.warning(err.msg);\r\n                });\r\n            },\r\n            getLoginTimeout(){\r\n                let url = this.selectLoginTimeoutUrl;\r\n                let data = {};\r\n                this.$curl.post(url, data).then(res => {\r\n                    if (res.code === 200) {\r\n                        this.timeout = res.data / 60;\r\n                    } else {\r\n                        this.$Message.warning(res.msg)\r\n                    }\r\n                }, err => {\r\n                    this.$Message.error(err)\r\n                })\r\n            },\r\n            showEditUser(index) {\r\n                this.editFormCustom.editUsername = this.userDataArray[index].username;\r\n                this.oldIndex = index;\r\n                this.showEdit = true\r\n            },\r\n            remove(index) {\r\n                let url = this.deleteUserUrl;\r\n                let data = {username: this.userDataArray[index].username};\r\n                this.$curl.post(url, data).then(res => {\r\n                    if (res.code == 200) {\r\n                        // this.userDataArray.splice(index, 1);\r\n                        this.getAllUserArray();\r\n                        this.$Message.success(res.msg);\r\n                    } else {\r\n                        this.$Message.warning(res.msg);\r\n                    }\r\n                }, err => {\r\n                    this.$Message.error(err);\r\n                });\r\n            },\r\n            showAddModal() {\r\n                this.showAdd = true;\r\n            },\r\n            handleSubmit(formCustom) {\r\n                this.$refs[formCustom].validate((valid) => {\r\n                    if (valid) {\r\n                        let url = this.addUserUrl;\r\n                        let data = {\r\n                            username: this.formCustom.addUsername,\r\n                            password: this.formCustom.passwd\r\n                        };\r\n                        this.$curl.post(url, data).then(res => {\r\n                            if (res.code == 200) {\r\n                                // this.userDataArray.push({\r\n                                //     username: this.formCustom.addUsername,\r\n                                //     type: \"管理员\"\r\n                                // });\r\n                                this.getAllUserArray();\r\n                                this.$Message.success(res.msg);\r\n                                this.showAdd = false;\r\n                                this.handleClear();\r\n                            } else {\r\n                                this.$Message.warning(res.msg);\r\n                            }\r\n                        }, err => {\r\n                            this.$Message.error(err);\r\n                        });\r\n\r\n                    } else {\r\n                        this.$Message.error('信息不完整!');\r\n                    }\r\n                })\r\n            },\r\n            handleEdit(formCustom) {\r\n                this.$refs[formCustom].validate((valid) => {\r\n                    if (valid) {\r\n                        let url = this.editUserUrl;\r\n                        let data = {\r\n                            oldUsername: this.userDataArray[this.oldIndex].username,\r\n                            oldPassword: this.editFormCustom.oldPasswd,\r\n                            newUsername: this.editFormCustom.editUsername,\r\n                            newPassword: this.editFormCustom.newPasswd\r\n                        };\r\n                        this.$curl.post(url, data).then(res => {\r\n                            if (res.code == 200) {\r\n                                // this.userDataArray[this.oldIndex].username = this.editFormCustom.editUsername;\r\n                                this.getAllUserArray();\r\n                                this.$Message.success(res.msg);\r\n                                this.showEdit = false;\r\n                                this.handleClear();\r\n                            } else {\r\n                                this.$Message.warning(res.msg);\r\n                            }\r\n                        }, err => {\r\n                            this.$Message.error(err);\r\n                        });\r\n                    } else {\r\n                        this.$Message.error('信息不完整!');\r\n                    }\r\n                });\r\n            },\r\n            sumbitLoginTimeout() {\r\n                if (this.timeout < 5){\r\n                    this.$Message.warning(\"超时时间最短不小于 5 分钟\");\r\n                    this.getLoginTimeout();\r\n                    return ;\r\n                }\r\n                if (this.timeout > 1440){\r\n                    this.$Message.warning(\"超时时间最长不超过 1440 分钟\");\r\n                    this.getLoginTimeout();\r\n                    return ;\r\n                }\r\n                let url = this.updateLoginTimeoutUrl;\r\n                let data = {timeout: parseInt(this.timeout)};\r\n                this.$curl.post(url, data).then(res => {\r\n                   if (res.code === 200) {\r\n                       this.$Message.success(res.msg);\r\n                       this.getLoginTimeout();\r\n                   } else {\r\n                       this.$Message.warning(res.msg)\r\n                   }\r\n                }, err => {\r\n                    this.$Message.error(err)\r\n                });\r\n            },\r\n            handleReset(name) {\r\n                this.$refs[name].resetFields();\r\n            },\r\n            handleClear() {\r\n                this.showEdit = false;\r\n                this.showAdd = false;\r\n                this.formCustom = {};\r\n                this.editFormCustom = {};\r\n            }\r\n        },\r\n        created() {\r\n            let url = this.selectAllUserUrl;\r\n            let data = {};\r\n            this.$curl.post(url, data).then(res => {\r\n                if (res.code === 200) {\r\n                    this.userDataArray = res.data;\r\n                    for (let i = 0; i < this.userDataArray.length; i++) {\r\n                        this.userDataArray[i].type = this.userDataArray[i].type===0?\"超级管理员\":\"管理员\";\r\n                    }\r\n                    this.loading = false;\r\n                } else {\r\n                    this.$Message.warning(res.msg);\r\n                }\r\n            }, err => {\r\n                this.$Message.error(err.msg);\r\n            });\r\n\r\n            url = this.selectLoginTimeoutUrl;\r\n            data = {};\r\n            this.$curl.post(url, data).then(res => {\r\n                if (res.code == 200) {\r\n                    this.timeout = res.data / 60;\r\n                } else {\r\n                    this.$Message.warning(res.msg)\r\n                }\r\n            }, err => {\r\n                this.$Message.error(err)\r\n            });\r\n        },\r\n        mixins: [http]\r\n    }\r\n</script>\r\n\r\n<style type=\"text/css\">\r\n    [v-cloak] {\r\n        display: none;\r\n    }\r\n</style>\r\n"]}]}
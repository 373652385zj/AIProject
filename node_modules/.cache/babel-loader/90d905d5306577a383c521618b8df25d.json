{"remainingRequest":"/Volumes/JAKY/温博老师给的任务/智能盒子(1)/node_modules/_babel-loader@8.1.0@babel-loader/lib/index.js!/Volumes/JAKY/温博老师给的任务/智能盒子(1)/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!/Volumes/JAKY/温博老师给的任务/智能盒子(1)/node_modules/_vue-loader@15.9.3@vue-loader/lib/index.js??vue-loader-options!/Volumes/JAKY/温博老师给的任务/智能盒子(1)/src/components/System/BaseSetting.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/JAKY/温博老师给的任务/智能盒子(1)/src/components/System/BaseSetting.vue","mtime":1599822245000},{"path":"/Volumes/JAKY/温博老师给的任务/智能盒子(1)/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/JAKY/温博老师给的任务/智能盒子(1)/node_modules/_babel-loader@8.1.0@babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/JAKY/温博老师给的任务/智能盒子(1)/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/JAKY/温博老师给的任务/智能盒子(1)/node_modules/_vue-loader@15.9.3@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBodHRwIGZyb20gIkAvY29uZmlnL2h0dHAiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkJhc2VTZXR0aW5nIiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaXA6IFtdLAogICAgICBuZXRtYXNrOiBbXSwKICAgICAgZ2F0ZXdheTogW10sCiAgICAgIEROUzogW10sCiAgICAgIEROUzI6IFtdLAogICAgICBIVFRQUzogJycsCiAgICAgIGlzSXBUcnVlOiB0cnVlLAogICAgICBpc0dhdGV3YXlUcnVlOiB0cnVlLAogICAgICBpc05ldG1hc2tUcnVlOiB0cnVlCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgc2F2ZTogZnVuY3Rpb24gc2F2ZShldmVudCkgewogICAgICBjb25zb2xlLmxvZyhldmVudC50YXJnZXQudmFsdWUpOwogICAgfSwKICAgIGhhbmRsZUVycm9yOiBmdW5jdGlvbiBoYW5kbGVFcnJvcih2YWx1ZSkgewogICAgICB0aGlzLiRNZXNzYWdlLmVycm9yKHZhbHVlKTsKICAgIH0sCiAgICBnZXRJUDogZnVuY3Rpb24gZ2V0SVAoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgdXJsID0gdGhpcy5nZXRJUFVybDsKICAgICAgdGhpcy4kY3VybC5wb3N0KHVybCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgaWYgKHJlcy5jb2RlID09PSAyMDApIHsKICAgICAgICAgIF90aGlzLm5ldG1hc2sgPSBbXTsKICAgICAgICAgIF90aGlzLmdhdGV3YXkgPSBbXTsKICAgICAgICAgIF90aGlzLmlwID0gW107CiAgICAgICAgICByZXMuZGF0YS5ORVRNQVNLLnNwbGl0KCcuJykuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICBfdGhpcy5uZXRtYXNrLnB1c2goK2l0ZW0pOwogICAgICAgICAgfSk7CgogICAgICAgICAgaWYgKHJlcy5kYXRhLkdBVEVXQVkpIHsKICAgICAgICAgICAgcmVzLmRhdGEuR0FURVdBWS5zcGxpdCgnLicpLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgICBfdGhpcy5nYXRld2F5LnB1c2goK2l0ZW0pOwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KCiAgICAgICAgICByZXMuZGF0YS5JUC5zcGxpdCgnLicpLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgX3RoaXMuaXAucHVzaCgraXRlbSk7CiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgX3RoaXMuJE1lc3NhZ2Uud2FybmluZyhyZXMubXNnKTsKICAgICAgICB9CiAgICAgIH0sIGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICBfdGhpcy4kTWVzc2FnZS5lcnJvcihlcnIpOwogICAgICB9KTsKICAgIH0sCiAgICBpc0lQOiBmdW5jdGlvbiBpc0lQKHN0YXR1cykgewogICAgICB0aGlzLmlzSXBUcnVlID0gIXN0YXR1czsKICAgIH0sCiAgICBpc0dhdGV3YXk6IGZ1bmN0aW9uIGlzR2F0ZXdheShzdGF0dXMpIHsKICAgICAgdGhpcy5pc0dhdGV3YXlUcnVlID0gIXN0YXR1czsKICAgIH0sCiAgICBpc05ldG1hc2s6IGZ1bmN0aW9uIGlzTmV0bWFzayhzdGF0dXMpIHsKICAgICAgdGhpcy5pc05ldG1hc2tUcnVlID0gc3RhdHVzOwogICAgfSwKICAgIGNoZWNrVGhlSVA6IGZ1bmN0aW9uIGNoZWNrVGhlSVAoKSB7CiAgICAgIGlmICh0aGlzLmlzR2F0ZXdheVRydWUgJiYgdGhpcy5pc05ldG1hc2tUcnVlICYmIHRoaXMuaXNJcFRydWUpIHsKICAgICAgICB2YXIgZmxhZyA9IHRydWU7CgogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgMzsgaSsrKSB7CiAgICAgICAgICBpZiAodGhpcy5pcFtpXSAhPSB0aGlzLmdhdGV3YXlbaV0pIHsKICAgICAgICAgICAgZmxhZyA9IGZhbHNlOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGlmIChmbGFnKSB7CiAgICAgICAgICB0aGlzLnN1bWJpdEdlZGl0SVAodGhpcy5pcCwgdGhpcy5nYXRld2F5LCB0aGlzLm5ldG1hc2spOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLiRNb2RhbC53YXJuaW5nKHsKICAgICAgICAgICAgdGl0bGU6ICLorablkYoiLAogICAgICAgICAgICBjb250ZW50OiAiaXDkuI7lrZDnvZHmjqnnoIHkuI3lnKjlkIzkuIDnvZHmrrXvvIzov5nlj6/og73lsIblr7zoh7TlvIDlj5Hmnb/ns7vnu5/ml6Dms5XkuIrnvZHvvIzmmK/lkKbnu6fnu60iLAogICAgICAgICAgICBva1RleHQ6ICLmmK8iLAogICAgICAgICAgICBjYW5jZWxUZXh0OiAi5ZCmIiwKICAgICAgICAgICAgb25PazogdGhpcy5zdW1iaXRHZWRpdElQKHRoaXMuaXAsIHRoaXMuZ2F0ZXdheSwgdGhpcy5uZXRtYXNrKQogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJE1lc3NhZ2UuZXJyb3IoIuS/neWtmOmFjee9ruWksei0pe+8jOivt+ajgOafpUlQ77yM572R5YWz77yM5a2Q572R5o6p56CB5piv5ZCm5q2j56GuIik7CiAgICAgIH0KICAgIH0sCiAgICBzdW1iaXRHZWRpdElQOiBmdW5jdGlvbiBzdW1iaXRHZWRpdElQKGlwLCBnYXRld2F5LCBuZXRtYXNrKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdmFyIHVybCA9IHRoaXMuZ2VkaXRJUFVybDsKICAgICAgdmFyIGRhdGEgPSB7CiAgICAgICAgaXA6IGlwWzBdLnRvU3RyaW5nKCkgKyAnLicgKyBpcFsxXS50b1N0cmluZygpICsgJy4nICsgaXBbMl0udG9TdHJpbmcoKSArICcuJyArIGlwWzNdLnRvU3RyaW5nKCksCiAgICAgICAgZ2F0ZXdheTogZ2F0ZXdheVswXS50b1N0cmluZygpICsgJy4nICsgZ2F0ZXdheVsxXS50b1N0cmluZygpICsgJy4nICsgZ2F0ZXdheVsyXS50b1N0cmluZygpICsgJy4nICsgZ2F0ZXdheVszXS50b1N0cmluZygpLAogICAgICAgIG5ldG1hc2s6IG5ldG1hc2tbMF0udG9TdHJpbmcoKSArICcuJyArIG5ldG1hc2tbMV0udG9TdHJpbmcoKSArICcuJyArIG5ldG1hc2tbMl0udG9TdHJpbmcoKSArICcuJyArIG5ldG1hc2tbM10udG9TdHJpbmcoKQogICAgICB9OwogICAgICB0aGlzLiRjdXJsLnBvc3QodXJsLCBkYXRhKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBpZiAocmVzLmNvZGUgPT09IDIwMCkgewogICAgICAgICAgX3RoaXMyLmdldElQKCk7CgogICAgICAgICAgX3RoaXMyLiRNZXNzYWdlLnN1Y2Nlc3MocmVzLm1zZyk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIF90aGlzMi4kTWVzc2FnZS53YXJuaW5nKHJlcy5tc2cpOwogICAgICAgIH0KICAgICAgfSwgZnVuY3Rpb24gKGVycikgewogICAgICAgIF90aGlzMi4kTWVzc2FnZS5lcnJvcihlcnIpOwogICAgICB9KTsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICB2YXIgdXJsID0gdGhpcy5nZXRJUFVybDsKICAgIHRoaXMuJGN1cmwucG9zdCh1cmwpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICBpZiAocmVzLmNvZGUgPT0gMjAwKSB7CiAgICAgICAgX3RoaXMzLm5ldG1hc2sgPSBbXTsKICAgICAgICBfdGhpczMuZ2F0ZXdheSA9IFtdOwogICAgICAgIF90aGlzMy5pcCA9IFtdOwogICAgICAgIHJlcy5kYXRhLk5FVE1BU0suc3BsaXQoJy4nKS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICBfdGhpczMubmV0bWFzay5wdXNoKCtpdGVtKTsKICAgICAgICB9KTsKCiAgICAgICAgaWYgKHJlcy5kYXRhLkdBVEVXQVkpIHsKICAgICAgICAgIHJlcy5kYXRhLkdBVEVXQVkuc3BsaXQoJy4nKS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICAgIF90aGlzMy5nYXRld2F5LnB1c2goK2l0ZW0pOwogICAgICAgICAgfSk7CiAgICAgICAgfQoKICAgICAgICByZXMuZGF0YS5JUC5zcGxpdCgnLicpLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgIF90aGlzMy5pcC5wdXNoKCtpdGVtKTsKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICBfdGhpczMuJE1lc3NhZ2Uud2FybmluZyhyZXMubXNnKTsKICAgICAgfQogICAgfSwgZnVuY3Rpb24gKGVycikgewogICAgICBfdGhpczMuJE1lc3NhZ2UuZXJyb3IoZXJyKTsKICAgIH0pOwogIH0sCiAgbWl4aW5zOiBbaHR0cF0KfTs="},{"version":3,"sources":["BaseSetting.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA,OAAA,IAAA,MAAA,eAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,EAAA,EAAA,EADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,OAAA,EAAA,EAHA;AAIA,MAAA,GAAA,EAAA,EAJA;AAKA,MAAA,IAAA,EAAA,EALA;AAMA,MAAA,KAAA,EAAA,EANA;AAOA,MAAA,QAAA,EAAA,IAPA;AAQA,MAAA,aAAA,EAAA,IARA;AASA,MAAA,aAAA,EAAA;AATA,KAAA;AAWA,GAdA;AAeA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,gBACA,KADA,EACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,MAAA,CAAA,KAAA;AACA,KAHA;AAIA,IAAA,WAJA,uBAIA,KAJA,EAIA;AACA,WAAA,QAAA,CAAA,KAAA,CAAA,KAAA;AACA,KANA;AAOA,IAAA,KAPA,mBAOA;AAAA;;AACA,UAAA,GAAA,GAAA,KAAA,QAAA;AACA,WAAA,KAAA,CAAA,IAAA,CAAA,GAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,IAAA,KAAA,GAAA,EAAA;AACA,UAAA,KAAA,CAAA,OAAA,GAAA,EAAA;AACA,UAAA,KAAA,CAAA,OAAA,GAAA,EAAA;AACA,UAAA,KAAA,CAAA,EAAA,GAAA,EAAA;AACA,UAAA,GAAA,CAAA,IAAA,CAAA,OAAA,CAAA,KAAA,CAAA,GAAA,EAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,YAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,IAAA;AACA,WAFA;;AAGA,cAAA,GAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AACA,YAAA,GAAA,CAAA,IAAA,CAAA,OAAA,CAAA,KAAA,CAAA,GAAA,EAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,cAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,IAAA;AACA,aAFA;AAGA;;AACA,UAAA,GAAA,CAAA,IAAA,CAAA,EAAA,CAAA,KAAA,CAAA,GAAA,EAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,YAAA,KAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAAA,IAAA;AACA,WAFA;AAGA,SAfA,MAeA;AACA,UAAA,KAAA,CAAA,QAAA,CAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA;AACA,OAnBA,EAmBA,UAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,GAAA;AACA,OArBA;AAsBA,KA/BA;AAgCA,IAAA,IAhCA,gBAgCA,MAhCA,EAgCA;AACA,WAAA,QAAA,GAAA,CAAA,MAAA;AACA,KAlCA;AAmCA,IAAA,SAnCA,qBAmCA,MAnCA,EAmCA;AACA,WAAA,aAAA,GAAA,CAAA,MAAA;AACA,KArCA;AAsCA,IAAA,SAtCA,qBAsCA,MAtCA,EAsCA;AACA,WAAA,aAAA,GAAA,MAAA;AACA,KAxCA;AAyCA,IAAA,UAzCA,wBAyCA;AACA,UAAA,KAAA,aAAA,IAAA,KAAA,aAAA,IAAA,KAAA,QAAA,EAAA;AACA,YAAA,IAAA,GAAA,IAAA;;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,CAAA,EAAA,CAAA,EAAA,EAAA;AACA,cAAA,KAAA,EAAA,CAAA,CAAA,KAAA,KAAA,OAAA,CAAA,CAAA,CAAA,EAAA;AACA,YAAA,IAAA,GAAA,KAAA;AACA;AACA;AACA;;AACA,YAAA,IAAA,EAAA;AACA,eAAA,aAAA,CAAA,KAAA,EAAA,EAAA,KAAA,OAAA,EAAA,KAAA,OAAA;AACA,SAFA,MAEA;AACA,eAAA,MAAA,CAAA,OAAA,CAAA;AACA,YAAA,KAAA,EAAA,IADA;AAEA,YAAA,OAAA,EAAA,oCAFA;AAGA,YAAA,MAAA,EAAA,GAHA;AAIA,YAAA,UAAA,EAAA,GAJA;AAKA,YAAA,IAAA,EAAA,KAAA,aAAA,CAAA,KAAA,EAAA,EAAA,KAAA,OAAA,EAAA,KAAA,OAAA;AALA,WAAA;AAOA;AACA,OAnBA,MAmBA;AACA,aAAA,QAAA,CAAA,KAAA,CAAA,0BAAA;AACA;AACA,KAhEA;AAiEA,IAAA,aAjEA,yBAiEA,EAjEA,EAiEA,OAjEA,EAiEA,OAjEA,EAiEA;AAAA;;AACA,UAAA,GAAA,GAAA,KAAA,UAAA;AACA,UAAA,IAAA,GAAA;AACA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA,CAAA,CAAA,QAAA,KAAA,GAAA,GAAA,EAAA,CAAA,CAAA,CAAA,CAAA,QAAA,EAAA,GAAA,GAAA,GAAA,EAAA,CAAA,CAAA,CAAA,CAAA,QAAA,EAAA,GAAA,GAAA,GAAA,EAAA,CAAA,CAAA,CAAA,CAAA,QAAA,EADA;AAEA,QAAA,OAAA,EAAA,OAAA,CAAA,CAAA,CAAA,CAAA,QAAA,KAAA,GAAA,GAAA,OAAA,CAAA,CAAA,CAAA,CAAA,QAAA,EAAA,GAAA,GAAA,GAAA,OAAA,CAAA,CAAA,CAAA,CAAA,QAAA,EAAA,GAAA,GAAA,GAAA,OAAA,CAAA,CAAA,CAAA,CAAA,QAAA,EAFA;AAGA,QAAA,OAAA,EAAA,OAAA,CAAA,CAAA,CAAA,CAAA,QAAA,KAAA,GAAA,GAAA,OAAA,CAAA,CAAA,CAAA,CAAA,QAAA,EAAA,GAAA,GAAA,GAAA,OAAA,CAAA,CAAA,CAAA,CAAA,QAAA,EAAA,GAAA,GAAA,GAAA,OAAA,CAAA,CAAA,CAAA,CAAA,QAAA;AAHA,OAAA;AAKA,WAAA,KAAA,CAAA,IAAA,CAAA,GAAA,EAAA,IAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,IAAA,KAAA,GAAA,EAAA;AACA,UAAA,MAAA,CAAA,KAAA;;AACA,UAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,SAHA,MAGA;AACA,UAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA;AACA,OAPA,EAOA,UAAA,GAAA,EAAA;AACA,QAAA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,GAAA;AACA,OATA;AAUA;AAlFA,GAfA;AAmGA,EAAA,OAnGA,qBAmGA;AAAA;;AACA,QAAA,GAAA,GAAA,KAAA,QAAA;AACA,SAAA,KAAA,CAAA,IAAA,CAAA,GAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,UAAA,GAAA,CAAA,IAAA,IAAA,GAAA,EAAA;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,EAAA;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,EAAA;AACA,QAAA,MAAA,CAAA,EAAA,GAAA,EAAA;AACA,QAAA,GAAA,CAAA,IAAA,CAAA,OAAA,CAAA,KAAA,CAAA,GAAA,EAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,UAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,IAAA;AACA,SAFA;;AAGA,YAAA,GAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AACA,UAAA,GAAA,CAAA,IAAA,CAAA,OAAA,CAAA,KAAA,CAAA,GAAA,EAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,YAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA,IAAA;AACA,WAFA;AAGA;;AACA,QAAA,GAAA,CAAA,IAAA,CAAA,EAAA,CAAA,KAAA,CAAA,GAAA,EAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,UAAA,MAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAAA,IAAA;AACA,SAFA;AAGA,OAfA,MAeA;AACA,QAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA;AACA,KAnBA,EAmBA,UAAA,GAAA,EAAA;AACA,MAAA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,GAAA;AACA,KArBA;AAsBA,GA3HA;AA4HA,EAAA,MAAA,EAAA,CAAA,IAAA;AA5HA,CAAA","sourcesContent":["<template>\r\n    <div class=\"test3\">\r\n        <div class=\"title2\">\r\n            <h3>基础网络</h3>\r\n        </div>\r\n        <div class=\"aline\"></div>\r\n        <div class=\"cont1\">\r\n\r\n            <!----------------------------------------页面内部--------------------------------------------->\r\n            <div class=\"word\">\r\n                <!--                    <hr class=\"hrLine\"/>-->\r\n                <Divider orientation=\"left\" style=\"font-weight: bold\">▷ LAN1</Divider>\r\n            </div>\r\n\r\n            <div class=\"father\">\r\n                <label>IP地址</label>\r\n                <ve-ip width=\"220\" @status=\"isIP\" format=\"ipv4\" v-model=\"ip\"></ve-ip>\r\n                <br>\r\n                <br>\r\n\r\n                <label>子网掩码</label>\r\n                <ve-subnet width=\"220\" @status=\"isNetmask\" v-model=\"netmask\"></ve-subnet>\r\n                <br>\r\n                <br>\r\n\r\n                <label>网关</label>\r\n                <ve-ip width=\"220\" format=\"ipv4\" @status=\"isGateway\" :message=\"'请输入正确的网关'\" v-model=\"gateway\"></ve-ip>\r\n                <br>\r\n                <br>\r\n\r\n\r\n                <Button type=\"primary\" style=\"margin-left: 500px;\" @click=\"checkTheIP()\">保存配置</Button>\r\n\r\n            </div>\r\n\r\n            <div class=\"word\">\r\n                <Divider orientation=\"left\" style=\"font-weight: bold\">▷ 其他</Divider>\r\n            </div>\r\n            <div class=\"father\">\r\n                <label>首选DNS</label>\r\n                <ve-ip width=\"200\" format=\"ipv4\" :message=\"'请输入正确的DNS地址'\" v-model=\"DNS\"></ve-ip>\r\n                <br>\r\n                <br>\r\n\r\n                <label>备选DNS</label>\r\n                <ve-ip width=\"200\" format=\"ipv4\" :message=\"'请输入正确的DNS地址'\" v-model=\"DNS2\"></ve-ip>\r\n                <br>\r\n                <br>\r\n\r\n                <label>HTTPS</label>\r\n                <Input v-model=\"HTTPS\" placeholder=\"Enter something...\" style=\"margin-right: 50px;width: 250px\"/>\r\n                <br>\r\n                <br>\r\n\r\n                <Button type=\"primary\" style=\"margin-left: 500px;\">保存配置</Button>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    import http from \"@/config/http\";\r\n\r\n    export default {\r\n        name: \"BaseSetting\",\r\n        data() {\r\n            return {\r\n                ip: [],\r\n                netmask: [],\r\n                gateway: [],\r\n                DNS: [],\r\n                DNS2: [],\r\n                HTTPS: '',\r\n                isIpTrue: true,\r\n                isGatewayTrue: true,\r\n                isNetmaskTrue: true\r\n            }\r\n        },\r\n        methods: {\r\n            save(event) {\r\n                console.log(event.target.value)\r\n            },\r\n            handleError(value) {\r\n                this.$Message.error(value)\r\n            },\r\n            getIP() {\r\n                let url = this.getIPUrl;\r\n                this.$curl.post(url).then(res => {\r\n                    if (res.code === 200) {\r\n                        this.netmask = [];\r\n                        this.gateway = [];\r\n                        this.ip = [];\r\n                        res.data.NETMASK.split('.').forEach(item => {\r\n                            this.netmask.push(+item)\r\n                        });\r\n                        if (res.data.GATEWAY) {\r\n                            res.data.GATEWAY.split('.').forEach(item => {\r\n                                this.gateway.push(+item)\r\n                            });\r\n                        }\r\n                        res.data.IP.split('.').forEach(item => {\r\n                            this.ip.push(+item)\r\n                        });\r\n                    } else {\r\n                        this.$Message.warning(res.msg)\r\n                    }\r\n                }, err => {\r\n                    this.$Message.error(err)\r\n                })\r\n            },\r\n            isIP(status) {\r\n                this.isIpTrue = !status;\r\n            },\r\n            isGateway(status) {\r\n                this.isGatewayTrue = !status;\r\n            },\r\n            isNetmask(status) {\r\n                this.isNetmaskTrue = status;\r\n            },\r\n            checkTheIP() {\r\n                if (this.isGatewayTrue && this.isNetmaskTrue && this.isIpTrue) {\r\n                    let flag = true;\r\n                    for (let i = 0; i < 3; i++) {\r\n                        if (this.ip[i] != this.gateway[i]) {\r\n                            flag = false;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (flag) {\r\n                        this.sumbitGeditIP(this.ip, this.gateway, this.netmask);\r\n                    } else {\r\n                        this.$Modal.warning({\r\n                            title: \"警告\",\r\n                            content: \"ip与子网掩码不在同一网段，这可能将导致开发板系统无法上网，是否继续\",\r\n                            okText: \"是\",\r\n                            cancelText: \"否\",\r\n                            onOk: this.sumbitGeditIP(this.ip, this.gateway, this.netmask)\r\n                        })\r\n                    }\r\n                } else {\r\n                    this.$Message.error(\"保存配置失败，请检查IP，网关，子网掩码是否正确\")\r\n                }\r\n            },\r\n            sumbitGeditIP(ip, gateway, netmask) {\r\n                let url = this.geditIPUrl;\r\n                let data = {\r\n                    ip: ip[0].toString() + '.' + ip[1].toString() + '.' + ip[2].toString() + '.' + ip[3].toString(),\r\n                    gateway: gateway[0].toString() + '.' + gateway[1].toString() + '.' + gateway[2].toString() + '.' + gateway[3].toString(),\r\n                    netmask: netmask[0].toString() + '.' + netmask[1].toString() + '.' + netmask[2].toString() + '.' + netmask[3].toString()\r\n                };\r\n                this.$curl.post(url, data).then(res => {\r\n                    if (res.code === 200) {\r\n                        this.getIP();\r\n                        this.$Message.success(res.msg);\r\n                    } else {\r\n                        this.$Message.warning(res.msg);\r\n                    }\r\n                }, err => {\r\n                    this.$Message.error(err);\r\n                })\r\n            }\r\n        },\r\n        created() {\r\n            let url = this.getIPUrl;\r\n            this.$curl.post(url).then(res => {\r\n                if (res.code == 200) {\r\n                    this.netmask = [];\r\n                    this.gateway = [];\r\n                    this.ip = [];\r\n                    res.data.NETMASK.split('.').forEach(item => {\r\n                        this.netmask.push(+item)\r\n                    });\r\n                    if (res.data.GATEWAY) {\r\n                        res.data.GATEWAY.split('.').forEach(item => {\r\n                            this.gateway.push(+item)\r\n                        });\r\n                    }\r\n                    res.data.IP.split('.').forEach(item => {\r\n                        this.ip.push(+item)\r\n                    });\r\n                } else {\r\n                    this.$Message.warning(res.msg)\r\n                }\r\n            }, err => {\r\n                this.$Message.error(err)\r\n            })\r\n        },\r\n        mixins: [http]\r\n    }\r\n</script>\r\n\r\n<style>\r\n    .input-ip ul li input {\r\n        color: #000000;\r\n        width: 80% !important;\r\n        font-size: 16px;\r\n    }\r\n\r\n    .input-subnet ul li input {\r\n        color: #000000;\r\n        width: 80% !important;\r\n        font-size: 16px;\r\n    }\r\n</style>\r\n"],"sourceRoot":"src/components/System"}]}